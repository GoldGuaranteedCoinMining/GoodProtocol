{
  "manifestVersion": "3.1",
  "impls": {
    "805607f1689b386c2c2948968931c31a0ae64d226f5e3a8d703b54373382cc09": {
      "address": "0xB7f8BC63BbcaD18155201308C8f3540b07f84F5e",
      "txHash": "0xb696bc884504e534b789fa0e0a442669763b76179a117374417cef134dd26c45",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "NameService",
            "label": "addresses",
            "type": "t_mapping(t_bytes32,t_address)",
            "src": "contracts/utils/NameService.sol:24"
          },
          {
            "contract": "NameService",
            "label": "dao",
            "type": "t_contract(Controller)3041",
            "src": "contracts/utils/NameService.sol:26"
          }
        ],
        "types": {
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(Controller)3041": {
            "label": "contract Controller"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "e1f5284d6683189517edcae128387171e0c90857219df07bb9f5076b43451f92": {
      "address": "0x9A676e781A523b5d0C0e43731313A708CB607508",
      "txHash": "0xda7cf3abc9414d7f5c866ebd2f050c34172c59225e9f19c49ab0937db3e423a4",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "DAOContract",
            "label": "dao",
            "type": "t_contract(Controller)3041",
            "src": "contracts/utils/DAOContract.sol:15"
          },
          {
            "contract": "DAOContract",
            "label": "avatar",
            "type": "t_contract(Avatar)2943",
            "src": "contracts/utils/DAOContract.sol:17"
          },
          {
            "contract": "DAOContract",
            "label": "nameService",
            "type": "t_contract(NameService)21010",
            "src": "contracts/utils/DAOContract.sol:19"
          },
          {
            "contract": "DAOContract",
            "label": "gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/utils/DAOContract.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)301_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:72"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:222"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "_roleMembers",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)2703_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:32"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:34"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:309"
          },
          {
            "contract": "ERC20BurnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:48"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ERC20PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol:37"
          },
          {
            "contract": "ERC20PresetMinterPauserUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/presets/ERC20PresetMinterPauserUpgradeable.sol:103"
          },
          {
            "contract": "GoodReserveCDai",
            "label": "cap",
            "type": "t_uint256",
            "src": "contracts/reserve/GoodReserveCDai.sol:42"
          },
          {
            "contract": "GoodReserveCDai",
            "label": "lastMinted",
            "type": "t_uint256",
            "src": "contracts/reserve/GoodReserveCDai.sol:46"
          },
          {
            "contract": "GoodReserveCDai",
            "label": "daiAddress",
            "type": "t_address",
            "src": "contracts/reserve/GoodReserveCDai.sol:53"
          },
          {
            "contract": "GoodReserveCDai",
            "label": "cDaiAddress",
            "type": "t_address",
            "src": "contracts/reserve/GoodReserveCDai.sol:54"
          },
          {
            "contract": "GoodReserveCDai",
            "label": "gdxAirdrop",
            "type": "t_bytes32",
            "src": "contracts/reserve/GoodReserveCDai.sol:57"
          },
          {
            "contract": "GoodReserveCDai",
            "label": "isClaimedGDX",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/reserve/GoodReserveCDai.sol:59"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)2703_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)"
          },
          "t_struct(AddressSet)2703_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2426_storage"
              }
            ]
          },
          "t_struct(Set)2426_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)301_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)301_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_contract(Controller)3041": {
            "label": "contract Controller"
          },
          "t_contract(Avatar)2943": {
            "label": "contract Avatar"
          },
          "t_contract(NameService)21010": {
            "label": "contract NameService"
          }
        }
      }
    },
    "0acd74088c769f841d90fb778fa6610a96da6b46e4d478668f25dd0a9731e6c5": {
      "address": "0x959922bE3CAee4b8Cd9a407cc3ac1C251C2007B1",
      "txHash": "0x262c5cb1146b8692630f225d05905b6d114885791fef169e7623b03cd9327f7e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "GoodMarketMaker",
            "label": "reserveTokens",
            "type": "t_mapping(t_address,t_struct(ReserveToken)8604_storage)",
            "src": "contracts/reserve/GoodMarketMaker.sol:35"
          },
          {
            "contract": "GoodMarketMaker",
            "label": "nameService",
            "type": "t_contract(NameService)21010",
            "src": "contracts/reserve/GoodMarketMaker.sol:37"
          },
          {
            "contract": "GoodMarketMaker",
            "label": "reserveRatioDailyExpansion",
            "type": "t_uint256",
            "src": "contracts/reserve/GoodMarketMaker.sol:108"
          },
          {
            "contract": "GoodMarketMaker",
            "label": "decimals",
            "type": "t_uint256",
            "src": "contracts/reserve/GoodMarketMaker.sol:111"
          }
        ],
        "types": {
          "t_mapping(t_address,t_struct(ReserveToken)8604_storage)": {
            "label": "mapping(address => struct GoodMarketMaker.ReserveToken)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(ReserveToken)8604_storage": {
            "label": "struct GoodMarketMaker.ReserveToken",
            "members": [
              {
                "label": "reserveSupply",
                "type": "t_uint256"
              },
              {
                "label": "reserveRatio",
                "type": "t_uint32"
              },
              {
                "label": "gdSupply",
                "type": "t_uint256"
              },
              {
                "label": "lastExpansion",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_contract(NameService)21010": {
            "label": "contract NameService"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "4907788daab761941d158b89e0025b9f746932bf63d2f27f3d4019997cc2e8c7": {
      "address": "0x68B1D87F95878fE05B998F19b66F4baba5De1aed",
      "txHash": "0x9682da1e79186c8ecb08373cac3f51962e639b26f0055d55d0a77040161837a4",
      "layout": {
        "storage": [
          {
            "contract": "DAOContract",
            "label": "dao",
            "type": "t_contract(Controller)3041",
            "src": "contracts/utils/DAOContract.sol:15"
          },
          {
            "contract": "DAOContract",
            "label": "avatar",
            "type": "t_contract(Avatar)2943",
            "src": "contracts/utils/DAOContract.sol:17"
          },
          {
            "contract": "DAOContract",
            "label": "nameService",
            "type": "t_contract(NameService)21010",
            "src": "contracts/utils/DAOContract.sol:19"
          },
          {
            "contract": "DAOContract",
            "label": "gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/utils/DAOContract.sol:42"
          },
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)301_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:72"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:222"
          },
          {
            "contract": "Reputation",
            "label": "name",
            "type": "t_string_storage",
            "src": "contracts/governance/Reputation.sol:19"
          },
          {
            "contract": "Reputation",
            "label": "symbol",
            "type": "t_string_storage",
            "src": "contracts/governance/Reputation.sol:20"
          },
          {
            "contract": "Reputation",
            "label": "decimals",
            "type": "t_uint8",
            "src": "contracts/governance/Reputation.sol:22"
          },
          {
            "contract": "Reputation",
            "label": "balances",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts/governance/Reputation.sol:39"
          },
          {
            "contract": "Reputation",
            "label": "totalSupplyHistory",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/governance/Reputation.sol:42"
          },
          {
            "contract": "GReputation",
            "label": "nonces",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/governance/GReputation.sol:44"
          },
          {
            "contract": "GReputation",
            "label": "blockchainStates",
            "type": "t_mapping(t_bytes32,t_array(t_struct(BlockchainState)5504_storage)dyn_storage)",
            "src": "contracts/governance/GReputation.sol:47"
          },
          {
            "contract": "GReputation",
            "label": "stateHashBalances",
            "type": "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))",
            "src": "contracts/governance/GReputation.sol:50"
          },
          {
            "contract": "GReputation",
            "label": "activeBlockchains",
            "type": "t_array(t_bytes32)dyn_storage",
            "src": "contracts/governance/GReputation.sol:53"
          },
          {
            "contract": "GReputation",
            "label": "delegates",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/governance/GReputation.sol:56"
          },
          {
            "contract": "GReputation",
            "label": "activeVotes",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts/governance/GReputation.sol:59"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_array(t_struct(BlockchainState)5504_storage)dyn_storage)": {
            "label": "mapping(bytes32 => struct GReputation.BlockchainState[])"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_struct(BlockchainState)5504_storage)dyn_storage": {
            "label": "struct GReputation.BlockchainState[]"
          },
          "t_struct(BlockchainState)5504_storage": {
            "label": "struct GReputation.BlockchainState",
            "members": [
              {
                "label": "stateHash",
                "type": "t_bytes32"
              },
              {
                "label": "hashType",
                "type": "t_uint256"
              },
              {
                "label": "totalSupply",
                "type": "t_uint256"
              },
              {
                "label": "blockNumber",
                "type": "t_uint256"
              },
              {
                "label": "__reserevedSpace",
                "type": "t_array(t_uint256)5_storage"
              }
            ]
          },
          "t_array(t_uint256)5_storage": {
            "label": "uint256[5]"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
            "label": "mapping(bytes32 => mapping(address => uint256))"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)301_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)301_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_contract(Controller)3041": {
            "label": "contract Controller"
          },
          "t_contract(Avatar)2943": {
            "label": "contract Avatar"
          },
          "t_contract(NameService)21010": {
            "label": "contract NameService"
          }
        }
      }
    },
    "2357b5a1a7d57e1d3add1ce542c5b3636f85e1a69ef6b4b70a17b07bb2196107": {
      "address": "0x4ed7c70F96B99c776995fB64377f0d4aB3B0e1C1",
      "txHash": "0xb6349192772274dea72575641346c8898d8eb68440c8d81e046c1420557e3df2",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:34"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:309"
          },
          {
            "contract": "DAOContract",
            "label": "dao",
            "type": "t_contract(Controller)3041",
            "src": "contracts/utils/DAOContract.sol:15"
          },
          {
            "contract": "DAOContract",
            "label": "avatar",
            "type": "t_contract(Avatar)2943",
            "src": "contracts/utils/DAOContract.sol:17"
          },
          {
            "contract": "DAOContract",
            "label": "nameService",
            "type": "t_contract(NameService)21010",
            "src": "contracts/utils/DAOContract.sol:19"
          },
          {
            "contract": "DAOContract",
            "label": "gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/utils/DAOContract.sol:42"
          },
          {
            "contract": "BaseGovernanceShareField",
            "label": "totalProductivity",
            "type": "t_uint256",
            "src": "contracts/governancestaking/BaseGovernanceShareField.sol:11"
          },
          {
            "contract": "BaseGovernanceShareField",
            "label": "accAmountPerShare",
            "type": "t_uint256",
            "src": "contracts/governancestaking/BaseGovernanceShareField.sol:13"
          },
          {
            "contract": "BaseGovernanceShareField",
            "label": "rewardsMintedSoFar",
            "type": "t_uint256",
            "src": "contracts/governancestaking/BaseGovernanceShareField.sol:15"
          },
          {
            "contract": "BaseGovernanceShareField",
            "label": "cumRewards",
            "type": "t_uint256",
            "src": "contracts/governancestaking/BaseGovernanceShareField.sol:17"
          },
          {
            "contract": "BaseGovernanceShareField",
            "label": "shareToken",
            "type": "t_address",
            "src": "contracts/governancestaking/BaseGovernanceShareField.sol:19"
          },
          {
            "contract": "BaseGovernanceShareField",
            "label": "lastRewardBlock",
            "type": "t_uint256",
            "src": "contracts/governancestaking/BaseGovernanceShareField.sol:21"
          },
          {
            "contract": "BaseGovernanceShareField",
            "label": "rewardsPerBlock",
            "type": "t_uint256",
            "src": "contracts/governancestaking/BaseGovernanceShareField.sol:23"
          },
          {
            "contract": "BaseGovernanceShareField",
            "label": "users",
            "type": "t_mapping(t_address,t_struct(UserInfo)7114_storage)",
            "src": "contracts/governancestaking/BaseGovernanceShareField.sol:31"
          },
          {
            "contract": "BaseGovernanceShareField",
            "label": "_gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/governancestaking/BaseGovernanceShareField.sol:207"
          },
          {
            "contract": "GovernanceStaking",
            "label": "token",
            "type": "t_contract(ERC20)3349",
            "src": "contracts/governancestaking/GovarnanceStaking.sol:22"
          }
        ],
        "types": {
          "t_contract(ERC20)3349": {
            "label": "contract ERC20"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(UserInfo)7114_storage)": {
            "label": "mapping(address => struct BaseGovernanceShareField.UserInfo)"
          },
          "t_struct(UserInfo)7114_storage": {
            "label": "struct BaseGovernanceShareField.UserInfo",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "rewardDebt",
                "type": "t_uint256"
              },
              {
                "label": "rewardEarn",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_contract(Controller)3041": {
            "label": "contract Controller"
          },
          "t_contract(Avatar)2943": {
            "label": "contract Avatar"
          },
          "t_contract(NameService)21010": {
            "label": "contract NameService"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    }
  },
  "admin": {
    "address": "0xA51c1fc2f0D1a1b8494Ed1FE312d7C3a78Ed91C0",
    "txHash": "0x9f44d64affa7f41ac34ddb026736fd972b1ea44c40ef1030e3f6d9babbae2b32"
  }
}
